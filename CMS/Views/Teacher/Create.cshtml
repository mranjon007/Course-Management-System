@using System.Data.Entity.ModelConfiguration.Conventions
@model CMS.Models.Teacher

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Teacher", FormMethod.Post, new {ID="TeacherSaveForm"} )) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Teacher</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, htmlAttributes:new{@class="form-control"})
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ShortName, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShortName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ContactNo, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContactNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Designation, new SelectList(ViewBag.DesignationList, "Name", "Name"), htmlAttributes:new{@class="form-control"})
                @Html.ValidationMessageFor(model => model.Designation)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.StatusList, "Name", "Name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Designation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfCourse, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.NumberOfCourse, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NumberOfCourse)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    
    
<script src="~/Scripts/jquery-2.2.3.js"></script>
    
<script src="~/Scripts/jquery.validate.js"></script>
    <script>
        $(document).ready(function () {


            $("#TeacherSaveForm").validate({
                rules: {
                    Name: "required",
                    ShortName: {
                        required: true
                    },
                    Email: {
                        required: true,
                        email: true
                    },
                    ContactNo: {
                        required: true
                    },
                    Designation: {
                        required: true
                    },


                    NumberOfCourse: {
                        min: 0,
                        max: function () {
                            if ($("#Status").val() == "Part Time")
                                return 2;
                            else {
                                return 5;
                            }
                        },    
                        required:true,
                },
                         
           
                },
                messages: {
                    Name: "Please provide Teacher's name.",
                    Email: {
                        required: "Please provide an email.",
                        email: "Please provide a valid email."
                    },
                    shortName: {
                        required: "Please provide your password.",
                    },
                    NumberOfCourse: {
                        required:"Please Give input"  
                    },
              
                }
            });
        });
    </script>
}
